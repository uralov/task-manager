# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-04-15 05:58
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=4096, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('status', models.SmallIntegerField(choices=[(0, 'Declined'), (1, 'Draft'), (2, 'Pending Acceptance'), (3, 'Working On It'), (4, 'Half Way Done'), (5, 'Almost Done'), (6, 'Completed'), (7, 'Approve')], default=1, verbose_name='Status')),
                ('status_description', models.TextField(verbose_name='Status description')),
                ('criticality', models.SmallIntegerField(choices=[(2, 'High'), (1, 'Medium'), (0, 'Low')], default=1, verbose_name='Criticality')),
                ('date_due', models.DateField(blank=True, null=True, verbose_name='Due date')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Time of create')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Time of update')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TaskActionLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=512, verbose_name='Action')),
                ('object_id', models.PositiveIntegerField()),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Time of action')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Actor')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='TaskAssignedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_assign', models.DateTimeField(auto_now_add=True)),
                ('assign_accept', models.NullBooleanField(verbose_name='Accept assign')),
                ('assign_description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='task_management.TaskAssignedUser')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners_chain', to='task_management.Task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('time_assign',),
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(upload_to='task_attachment/%Y/%m/%d/', verbose_name='Attachment')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='task_management.Task', verbose_name='Attachment task')),
            ],
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Comment message')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Time of create')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Time of update')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author of comment')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='task_management.Task', verbose_name='Comment task')),
            ],
        ),
        migrations.AddField(
            model_name='task',
            name='owners',
            field=mptt.fields.TreeManyToManyField(blank=True, through='task_management.TaskAssignedUser', to=settings.AUTH_USER_MODEL, verbose_name='Owners'),
        ),
        migrations.AddField(
            model_name='task',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='task_management.Task'),
        ),
        migrations.AlterUniqueTogether(
            name='taskassigneduser',
            unique_together=set([('user', 'task')]),
        ),
    ]
